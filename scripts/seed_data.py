"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º Faker
"""
import sys
import os
from datetime import date, timedelta
from faker import Faker
from sqlalchemy.orm import Session

# –î–æ–¥–∞—î–º–æ app –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ Python path
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from app.database import SessionLocal, engine, Base
from app.models import Contact

# –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ —è–∫—â–æ –≤–æ–Ω–∏ –Ω–µ —ñ—Å–Ω—É—é—Ç—å
Base.metadata.create_all(bind=engine)

def create_test_contacts(count: int = 20):
    """
    –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º Faker
    """
    fake = Faker('uk_UA')  # –£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –ª–æ–∫–∞–ª—å
    db = SessionLocal()
    
    try:
        # –û—á–∏—â—É—î–º–æ —ñ—Å–Ω—É—é—á—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏
        db.query(Contact).delete()
        db.commit()
        
        contacts = []
        for i in range(count):
            # –ì–µ–Ω–µ—Ä—É—î–º–æ –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (–≤—ñ–¥ 18 –¥–æ 80 —Ä–æ–∫—ñ–≤)
            birthday = fake.date_of_birth(minimum_age=18, maximum_age=80)
            
            # –î–µ—è–∫—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –º–∞—Ç–∏–º—É—Ç—å –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –Ω–∞ –Ω–∞–π–±–ª–∏–∂—á—ñ 7 –¥–Ω—ñ–≤
            if i < 3:  # –ü–µ—Ä—à—ñ 3 –∫–æ–Ω—Ç–∞–∫—Ç–∏
                today = date.today()
                birthday = today + timedelta(days=fake.random_int(min=1, max=7))
                birthday = birthday.replace(year=birthday.year - fake.random_int(min=20, max=50))
            
            contact = Contact(
                first_name=fake.first_name(),
                last_name=fake.last_name(),
                email=fake.unique.email(),
                phone=fake.phone_number(),
                birthday=birthday,
                additional_info=fake.text(max_nb_chars=200) if fake.boolean(chance_of_getting_true=60) else None
            )
            contacts.append(contact)
        
        # –î–æ–¥–∞—î–º–æ –≤—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –≤ –±–∞–∑—É
        db.add_all(contacts)
        db.commit()
        
        print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ {count} —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤")
        
        # –í–∏–≤–æ–¥–∏–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_contacts = db.query(Contact).count()
        print(f"üìä –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –≤ –±–∞–∑—ñ: {total_contacts}")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    create_test_contacts()